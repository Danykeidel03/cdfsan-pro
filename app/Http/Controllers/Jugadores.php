<?php

namespace App\Http\Controllers;

use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;
use Masterminds\HTML5\Exception;

class Jugadores  extends addJugadores
{
    /**
     * IndexAddPalabras constructor.
     */
    public function __construct()
    {
        $this->middleware('auth');
    }

    /**
     * Trata que acciÃ³n hay que realizar y la ejecuta
     * @return false|Application|Factory|View|string
     */
    public function index(Request $request)
    {
        switch ($request->input('accion')) {
            case "mostarEquipo":
                return $this->mostarEquipo($request->input('equipo'));
            case "mostarJugadoresEquipo":
                return $this->mostarJugadores($request->input('equipo'));
            case "cambioEquipo":
                return $this->cambioEquipo($request->input('idJugador'),$request->input('equipoNuevo'));
            case "mostarPartidos":
                return $this->nextMatch($request->input('equipo'),$request->input('fecha'));
            case "mostarJugadores":
                return $this->mostarJugadoresSinEquipo();
            default:
                return $this->consultar();
        }
    }

    /**
     * Obtiene los parametros de entrada y devuelve el view del controller
     * @return Application|Factory|View
     */
    private function consultar()
    {
        $ajaxUrl = url()->full();
        $arrViewData = [
            'ajaxUrl' => $ajaxUrl
        ];
        return view('jugadores', $arrViewData);
    }

    /**
     * Consulta el contador de $equipos creadas en glosarios
     * @param Request $request
     * @return false|string Respuesta
     */
    public function mostarEquipo(string $equipo)
    {
        try {
            $equipos = DB::table('equipos')
                ->select('id_equipo','categoria', 'division', 'entrenadores', 'jugadores')
                ->where('id_equipo', $equipo)
                ->get();

        } catch (Exception $e) {
        }
        $result = [
            'info' => 200,
            'resultado' => "OK",
            'error_msg' => "sin error",
            'response' => $equipos
        ];
        return $this->respuestaController("bien",$result);
    }

    /**
     * Cambia a jugador de equipo
     * @param Request $request
     * @return false|string Respuesta
     */
    public function cambioEquipo(string $idJugador, string $equipoNuevo)
    {

        $nombreEquipoNuevo = DB::table('equipos')
            ->select('categoria')
            ->where('id_equipo', $equipoNuevo)
            ->get();

        $categorias = json_decode($nombreEquipoNuevo, true); // Decodificar el JSON a un array asociativo
        $categoria = $categorias[0]['categoria'];

        DB::table('jugadores')
            ->where('id_jugador', '=', $idJugador)
            ->update([
                'equipo' => $categoria
            ]);

        $result = [
            'info' => 200,
            'resultado' => "OK",
            'error_msg' => "sin error",
        ];
        return $this->respuestaController("bien",$result);
    }


    /**
     * Consulta el contador de $equipos creadas en glosarios
     * @param Request $request
     * @return false|string Respuesta
     */
    public function mostarJugadoresSinEquipo()
    {
        try {
            $equipos = DB::table('jugadores')
                ->select('id_jugador','nombre','apellidos', 'equipo', 'fechaNac')
                ->where('equipo', '0')
                ->get();
        } catch (Exception $e) {
        }
        $result = [
            'info' => 200,
            'resultado' => "OK",
            'error_msg' => "sin error",
            'response' => $equipos
        ];
        return $this->respuestaController("bien",$result);
    }

    public function mostarJugadores($equipo)
    {
        return parent::mostarJugadores($equipo); // TODO: Change the autogenerated stub
    }


    public function nextMatch($equipoMatch, $valor){
        try {
            $fechaActual = date('Y-m-d');
            if($valor == "next"){
                $partidos = DB::table('partidos')
                    ->select('local','visitante','dia', 'hora', 'id_partido','escudo')
                    ->where('id_equipoSan', $equipoMatch)
                    ->where('finalizado', '0')
                    ->limit(3)
                    ->get();
            }else{
                $partidos = DB::table('partidos')
                    ->select('local','visitante','dia', 'hora')
                    ->where('dia', '0')
                    ->get();
            }
        } catch (Exception $e) {
        }
        $result = [
            'info' => 200,
            'resultado' => "OK",
            'error_msg' => "sin error",
            'response' => $partidos
        ];
        return $this->respuestaController("bien",$result);
    }

}
